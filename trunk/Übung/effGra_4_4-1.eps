%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 278 575 513
%%Creator: yExport 1.1.0.2
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Dienstag, 24. Mai 2011 18:26 Uhr MESZ
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
425 179 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
425.000 0.00000 l
425.000 179.000 l
0.00000 179.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0 0 425 179 rc
q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 -109.000 -156.000 ] concat
1.00000 1.00000 1.00000 RG
newpath
109.000 156.000 m
534.000 156.000 l
534.000 335.000 l
109.000 335.000 l
109.000 156.000 l
h
f
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 -109.000 -156.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -109.000 -156.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -109.000 -156.000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .800000 0.00000 RG
newpath
144.000 224.000 m
144.000 232.284 137.284 239.000 129.000 239.000  c
120.716 239.000 114.000 232.284 114.000 224.000  c
114.000 215.716 120.716 209.000 129.000 209.000  c
137.284 209.000 144.000 215.716 144.000 224.000  c
h
f
1.60000 M
10.0000 M
0.00000 0.00000 0.00000 RG
newpath
129.151 223.311 m
128.620 223.311 128.198 223.493 127.886 223.857  c
127.573 224.222 127.417 224.717 127.417 225.342  c
127.417 225.977 127.573 226.477 127.886 226.842  c
128.198 227.206 128.620 227.389 129.151 227.389  c
129.683 227.389 130.102 227.206 130.409 226.842  c
130.716 226.477 130.870 225.977 130.870 225.342  c
130.870 224.717 130.716 224.222 130.409 223.857  c
130.102 223.493 129.683 223.311 129.151 223.311  c
h
131.495 219.592 m
131.495 220.670 l
131.193 220.535 130.891 220.430 130.589 220.357  c
130.287 220.285 129.990 220.248 129.698 220.248  c
128.917 220.248 128.321 220.511 127.909 221.037  c
127.498 221.563 127.261 222.357 127.198 223.420  c
127.427 223.087 127.716 222.829 128.065 222.646  c
128.414 222.464 128.797 222.373 129.214 222.373  c
130.089 222.373 130.782 222.639 131.292 223.170  c
131.802 223.701 132.058 224.425 132.058 225.342  c
132.058 226.248 131.792 226.972 131.261 227.514  c
130.729 228.055 130.026 228.326 129.151 228.326  c
128.131 228.326 127.354 227.938 126.823 227.162  c
126.292 226.386 126.026 225.264 126.026 223.795  c
126.026 222.410 126.354 221.305 127.011 220.482  c
127.667 219.660 128.547 219.248 129.651 219.248  c
129.943 219.248 130.240 219.277 130.542 219.334  c
130.844 219.391 131.162 219.477 131.495 219.592  c
h
f
1.00000 .800000 0.00000 RG
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
144.000 224.000 m
144.000 232.284 137.284 239.000 129.000 239.000  c
120.716 239.000 114.000 232.284 114.000 224.000  c
114.000 215.716 120.716 209.000 129.000 209.000  c
137.284 209.000 144.000 215.716 144.000 224.000  c
h
S
2 J
10.0000 M
1.00000 .800000 0.00000 RG
newpath
221.000 224.000 m
221.000 232.284 214.284 239.000 206.000 239.000  c
197.716 239.000 191.000 232.284 191.000 224.000  c
191.000 215.716 197.716 209.000 206.000 209.000  c
214.284 209.000 221.000 215.716 221.000 224.000  c
h
f
1.60000 M
10.0000 M
0.00000 0.00000 0.00000 RG
newpath
203.479 219.404 m
208.120 219.404 l
208.120 220.404 l
204.558 220.404 l
204.558 222.545 l
204.735 222.482 204.909 222.438 205.081 222.412  c
205.253 222.386 205.422 222.373 205.589 222.373  c
206.568 222.373 207.344 222.641 207.917 223.178  c
208.490 223.714 208.776 224.436 208.776 225.342  c
208.776 226.290 208.482 227.024 207.894 227.545  c
207.305 228.066 206.479 228.326 205.417 228.326  c
205.042 228.326 204.664 228.295 204.284 228.232  c
203.904 228.170 203.511 228.076 203.104 227.951  c
203.104 226.764 l
203.459 226.951 203.823 227.092 204.198 227.186  c
204.573 227.279 204.969 227.326 205.386 227.326  c
206.063 227.326 206.599 227.149 206.995 226.795  c
207.391 226.441 207.589 225.956 207.589 225.342  c
207.589 224.738 207.391 224.258 206.995 223.904  c
206.599 223.550 206.063 223.373 205.386 223.373  c
205.073 223.373 204.758 223.407 204.440 223.475  c
204.123 223.542 203.802 223.649 203.479 223.795  c
203.479 219.404 l
h
f
1.00000 .800000 0.00000 RG
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
221.000 224.000 m
221.000 232.284 214.284 239.000 206.000 239.000  c
197.716 239.000 191.000 232.284 191.000 224.000  c
191.000 215.716 197.716 209.000 206.000 209.000  c
214.284 209.000 221.000 215.716 221.000 224.000  c
h
S
2 J
10.0000 M
1.00000 .800000 0.00000 RG
newpath
298.000 224.000 m
298.000 232.284 291.284 239.000 283.000 239.000  c
274.716 239.000 268.000 232.284 268.000 224.000  c
268.000 215.716 274.716 209.000 283.000 209.000  c
291.284 209.000 298.000 215.716 298.000 224.000  c
h
f
1.60000 M
10.0000 M
0.00000 0.00000 0.00000 RG
newpath
283.714 220.436 m
280.729 225.107 l
283.714 225.107 l
283.714 220.436 l
h
283.401 219.404 m
284.901 219.404 l
284.901 225.107 l
286.151 225.107 l
286.151 226.092 l
284.901 226.092 l
284.901 228.154 l
283.714 228.154 l
283.714 226.092 l
279.776 226.092 l
279.776 224.951 l
283.401 219.404 l
h
f
1.00000 .800000 0.00000 RG
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
298.000 224.000 m
298.000 232.284 291.284 239.000 283.000 239.000  c
274.716 239.000 268.000 232.284 268.000 224.000  c
268.000 215.716 274.716 209.000 283.000 209.000  c
291.284 209.000 298.000 215.716 298.000 224.000  c
h
S
2 J
10.0000 M
1.00000 .800000 0.00000 RG
newpath
375.000 224.000 m
375.000 232.284 368.284 239.000 360.000 239.000  c
351.716 239.000 345.000 232.284 345.000 224.000  c
345.000 215.716 351.716 209.000 360.000 209.000  c
368.284 209.000 375.000 215.716 375.000 224.000  c
h
f
1.60000 M
10.0000 M
0.00000 0.00000 0.00000 RG
newpath
361.058 223.436 m
361.620 223.561 362.060 223.813 362.378 224.193  c
362.696 224.574 362.854 225.045 362.854 225.607  c
362.854 226.472 362.558 227.141 361.964 227.615  c
361.370 228.089 360.526 228.326 359.433 228.326  c
359.068 228.326 358.690 228.290 358.300 228.217  c
357.909 228.144 357.511 228.035 357.104 227.889  c
357.104 226.748 l
357.427 226.936 357.784 227.079 358.175 227.178  c
358.565 227.277 358.974 227.326 359.401 227.326  c
360.141 227.326 360.706 227.180 361.097 226.889  c
361.487 226.597 361.683 226.170 361.683 225.607  c
361.683 225.097 361.500 224.696 361.136 224.404  c
360.771 224.113 360.271 223.967 359.636 223.967  c
358.604 223.967 l
358.604 222.998 l
359.683 222.998 l
360.256 222.998 360.698 222.881 361.011 222.646  c
361.323 222.412 361.479 222.076 361.479 221.639  c
361.479 221.191 361.321 220.847 361.003 220.607  c
360.685 220.368 360.229 220.248 359.636 220.248  c
359.302 220.248 358.951 220.282 358.581 220.350  c
358.211 220.417 357.802 220.524 357.354 220.670  c
357.354 219.623 l
357.813 219.498 358.237 219.404 358.628 219.342  c
359.019 219.279 359.386 219.248 359.729 219.248  c
360.636 219.248 361.349 219.451 361.870 219.857  c
362.391 220.264 362.651 220.816 362.651 221.514  c
362.651 222.003 362.513 222.415 362.237 222.748  c
361.961 223.081 361.568 223.311 361.058 223.436  c
h
f
1.00000 .800000 0.00000 RG
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
375.000 224.000 m
375.000 232.284 368.284 239.000 360.000 239.000  c
351.716 239.000 345.000 232.284 345.000 224.000  c
345.000 215.716 351.716 209.000 360.000 209.000  c
368.284 209.000 375.000 215.716 375.000 224.000  c
h
S
2 J
10.0000 M
1.00000 .800000 0.00000 RG
newpath
452.000 224.000 m
452.000 232.284 445.284 239.000 437.000 239.000  c
428.716 239.000 422.000 232.284 422.000 224.000  c
422.000 215.716 428.716 209.000 437.000 209.000  c
445.284 209.000 452.000 215.716 452.000 224.000  c
h
f
1.60000 M
10.0000 M
0.00000 0.00000 0.00000 RG
newpath
435.479 227.154 m
439.620 227.154 l
439.620 228.154 l
434.058 228.154 l
434.058 227.154 l
434.506 226.696 435.118 226.074 435.894 225.287  c
436.670 224.501 437.157 223.993 437.354 223.764  c
437.740 223.347 438.008 222.990 438.159 222.693  c
438.310 222.396 438.386 222.107 438.386 221.826  c
438.386 221.357 438.222 220.977 437.894 220.686  c
437.565 220.394 437.141 220.248 436.620 220.248  c
436.245 220.248 435.852 220.311 435.440 220.436  c
435.029 220.561 434.589 220.758 434.120 221.029  c
434.120 219.826 l
434.599 219.639 435.045 219.495 435.456 219.396  c
435.868 219.298 436.245 219.248 436.589 219.248  c
437.495 219.248 438.219 219.475 438.761 219.928  c
439.302 220.381 439.573 220.988 439.573 221.748  c
439.573 222.102 439.506 222.441 439.370 222.764  c
439.235 223.087 438.990 223.467 438.636 223.904  c
438.532 224.019 438.219 224.347 437.698 224.889  c
437.177 225.430 436.438 226.186 435.479 227.154  c
h
f
1.00000 .800000 0.00000 RG
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
452.000 224.000 m
452.000 232.284 445.284 239.000 437.000 239.000  c
428.716 239.000 422.000 232.284 422.000 224.000  c
422.000 215.716 428.716 209.000 437.000 209.000  c
445.284 209.000 452.000 215.716 452.000 224.000  c
h
S
2 J
10.0000 M
1.00000 .800000 0.00000 RG
newpath
529.000 224.000 m
529.000 232.284 522.284 239.000 514.000 239.000  c
505.716 239.000 499.000 232.284 499.000 224.000  c
499.000 215.716 505.716 209.000 514.000 209.000  c
522.284 209.000 529.000 215.716 529.000 224.000  c
h
f
1.60000 M
10.0000 M
0.00000 0.00000 0.00000 RG
newpath
511.667 227.154 m
513.604 227.154 l
513.604 220.482 l
511.495 220.904 l
511.495 219.826 l
513.589 219.404 l
514.776 219.404 l
514.776 227.154 l
516.714 227.154 l
516.714 228.154 l
511.667 228.154 l
511.667 227.154 l
h
f
1.00000 .800000 0.00000 RG
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
529.000 224.000 m
529.000 232.284 522.284 239.000 514.000 239.000  c
505.716 239.000 499.000 232.284 499.000 224.000  c
499.000 215.716 505.716 209.000 514.000 209.000  c
522.284 209.000 529.000 215.716 529.000 224.000  c
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
144.000 224.000 m
183.000 224.000 l
S
newpath
191.000 224.000 m
179.000 219.000 l
182.000 224.000 l
179.000 229.000 l
h
f
2 J
1.60000 M
0 J
1.45000 M
newpath
167.495 231.170 m
166.891 231.170 166.435 231.469 166.128 232.068  c
165.821 232.667 165.667 233.571 165.667 234.779  c
165.667 235.977 165.821 236.876 166.128 237.475  c
166.435 238.074 166.891 238.373 167.495 238.373  c
168.110 238.373 168.571 238.074 168.878 237.475  c
169.185 236.876 169.339 235.977 169.339 234.779  c
169.339 233.571 169.185 232.667 168.878 232.068  c
168.571 231.469 168.110 231.170 167.495 231.170  c
h
167.495 230.232 m
168.474 230.232 169.224 230.620 169.745 231.396  c
170.266 232.173 170.526 233.300 170.526 234.779  c
170.526 236.248 170.266 237.370 169.745 238.146  c
169.224 238.923 168.474 239.311 167.495 239.311  c
166.516 239.311 165.769 238.923 165.253 238.146  c
164.737 237.370 164.479 236.248 164.479 234.779  c
164.479 233.300 164.737 232.173 165.253 231.396  c
165.769 230.620 166.516 230.232 167.495 230.232  c
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
221.000 224.000 m
260.000 224.000 l
S
newpath
268.000 224.000 m
256.000 219.000 l
259.000 224.000 l
256.000 229.000 l
h
f
2 J
1.60000 M
0 J
1.45000 M
newpath
244.495 231.170 m
243.891 231.170 243.435 231.469 243.128 232.068  c
242.821 232.667 242.667 233.571 242.667 234.779  c
242.667 235.977 242.821 236.876 243.128 237.475  c
243.435 238.074 243.891 238.373 244.495 238.373  c
245.110 238.373 245.571 238.074 245.878 237.475  c
246.185 236.876 246.339 235.977 246.339 234.779  c
246.339 233.571 246.185 232.667 245.878 232.068  c
245.571 231.469 245.110 231.170 244.495 231.170  c
h
244.495 230.232 m
245.474 230.232 246.224 230.620 246.745 231.396  c
247.266 232.173 247.526 233.300 247.526 234.779  c
247.526 236.248 247.266 237.370 246.745 238.146  c
246.224 238.923 245.474 239.311 244.495 239.311  c
243.516 239.311 242.769 238.923 242.253 238.146  c
241.737 237.370 241.479 236.248 241.479 234.779  c
241.479 233.300 241.737 232.173 242.253 231.396  c
242.769 230.620 243.516 230.232 244.495 230.232  c
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
142.770 229.950 m
200.820 255.033 l
205.400 256.499 l
209.959 256.928 l
214.498 256.320 l
219.017 254.677 l
262.261 233.944 l
S
newpath
269.474 230.485 m
256.492 231.164 l
261.359 234.376 l
260.815 240.181 l
h
f
2 J
1.60000 M
0 J
1.45000 M
newpath
252.053 252.607 m
251.490 252.607 251.048 252.758 250.725 253.060  c
250.402 253.362 250.240 253.774 250.240 254.294  c
250.240 254.826 250.402 255.242 250.725 255.544  c
251.048 255.847 251.490 255.998 252.053 255.998  c
252.615 255.998 253.058 255.847 253.381 255.544  c
253.704 255.242 253.865 254.826 253.865 254.294  c
253.865 253.774 253.706 253.362 253.389 253.060  c
253.071 252.758 252.626 252.607 252.053 252.607  c
h
250.865 252.107 m
250.365 251.982 249.972 251.745 249.686 251.396  c
249.399 251.047 249.256 250.623 249.256 250.123  c
249.256 249.425 249.506 248.873 250.006 248.466  c
250.506 248.060 251.188 247.857 252.053 247.857  c
252.928 247.857 253.613 248.060 254.107 248.466  c
254.602 248.873 254.850 249.425 254.850 250.123  c
254.850 250.623 254.709 251.047 254.428 251.396  c
254.146 251.745 253.751 251.982 253.240 252.107  c
253.813 252.242 254.258 252.503 254.576 252.888  c
254.894 253.274 255.053 253.742 255.053 254.294  c
255.053 255.149 254.795 255.802 254.279 256.255  c
253.764 256.709 253.021 256.935 252.053 256.935  c
251.094 256.935 250.355 256.709 249.834 256.255  c
249.313 255.802 249.053 255.149 249.053 254.294  c
249.053 253.742 249.214 253.274 249.537 252.888  c
249.860 252.503 250.303 252.242 250.865 252.107  c
h
250.443 250.232 m
250.443 250.690 250.584 251.044 250.865 251.294  c
251.146 251.544 251.542 251.669 252.053 251.669  c
252.563 251.669 252.962 251.544 253.248 251.294  c
253.535 251.044 253.678 250.690 253.678 250.232  c
253.678 249.784 253.535 249.432 253.248 249.177  c
252.962 248.922 252.563 248.794 252.053 248.794  c
251.542 248.794 251.146 248.922 250.865 249.177  c
250.584 249.432 250.443 249.784 250.443 250.232  c
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
298.000 224.000 m
337.000 224.000 l
S
newpath
345.000 224.000 m
333.000 219.000 l
336.000 224.000 l
333.000 229.000 l
h
f
2 J
1.60000 M
0 J
1.45000 M
newpath
321.495 231.170 m
320.891 231.170 320.435 231.469 320.128 232.068  c
319.821 232.667 319.667 233.571 319.667 234.779  c
319.667 235.977 319.821 236.876 320.128 237.475  c
320.435 238.074 320.891 238.373 321.495 238.373  c
322.110 238.373 322.571 238.074 322.878 237.475  c
323.185 236.876 323.339 235.977 323.339 234.779  c
323.339 233.571 323.185 232.667 322.878 232.068  c
322.571 231.469 322.110 231.170 321.495 231.170  c
h
321.495 230.232 m
322.474 230.232 323.224 230.620 323.745 231.396  c
324.266 232.173 324.526 233.300 324.526 234.779  c
324.526 236.248 324.266 237.370 323.745 238.146  c
323.224 238.923 322.474 239.311 321.495 239.311  c
320.516 239.311 319.769 238.923 319.253 238.146  c
318.737 237.370 318.479 236.248 318.479 234.779  c
318.479 233.300 318.737 232.173 319.253 231.396  c
319.769 230.620 320.516 230.232 321.495 230.232  c
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
142.196 231.133 m
231.203 279.245 l
235.611 281.046 l
240.037 281.693 l
244.481 281.187 l
248.944 279.528 l
339.428 234.286 l
S
newpath
346.584 230.708 m
333.614 231.603 l
338.534 234.733 l
338.087 240.547 l
h
f
2 J
1.60000 M
0 J
1.45000 M
newpath
281.787 278.987 m
283.725 278.987 l
283.725 272.315 l
281.615 272.737 l
281.615 271.659 l
283.709 271.237 l
284.896 271.237 l
284.896 278.987 l
286.834 278.987 l
286.834 279.987 l
281.787 279.987 l
281.787 278.987 l
h
290.234 278.987 m
294.375 278.987 l
294.375 279.987 l
288.812 279.987 l
288.812 278.987 l
289.260 278.529 289.872 277.907 290.648 277.120  c
291.424 276.334 291.911 275.826 292.109 275.597  c
292.495 275.180 292.763 274.823 292.914 274.526  c
293.065 274.229 293.141 273.940 293.141 273.659  c
293.141 273.190 292.977 272.810 292.648 272.519  c
292.320 272.227 291.896 272.081 291.375 272.081  c
291.000 272.081 290.607 272.144 290.195 272.269  c
289.784 272.394 289.344 272.591 288.875 272.862  c
288.875 271.659 l
289.354 271.472 289.799 271.328 290.211 271.229  c
290.622 271.131 291.000 271.081 291.344 271.081  c
292.250 271.081 292.974 271.308 293.516 271.761  c
294.057 272.214 294.328 272.821 294.328 273.581  c
294.328 273.935 294.260 274.274 294.125 274.597  c
293.990 274.920 293.745 275.300 293.391 275.737  c
293.286 275.852 292.974 276.180 292.453 276.722  c
291.932 277.263 291.193 278.019 290.234 278.987  c
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
219.332 217.126 m
261.112 195.583 l
270.125 193.006 l
279.389 194.443 l
338.406 216.082 l
S
newpath
345.917 218.836 m
336.372 210.011 l
337.467 215.738 l
332.929 219.399 l
h
f
2 J
1.60000 M
0 J
1.45000 M
newpath
303.651 186.395 m
300.667 191.067 l
303.651 191.067 l
303.651 186.395 l
h
303.339 185.364 m
304.839 185.364 l
304.839 191.067 l
306.089 191.067 l
306.089 192.051 l
304.839 192.051 l
304.839 194.114 l
303.651 194.114 l
303.651 192.051 l
299.714 192.051 l
299.714 190.911 l
303.339 185.364 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
375.000 224.000 m
414.000 224.000 l
S
newpath
422.000 224.000 m
410.000 219.000 l
413.000 224.000 l
410.000 229.000 l
h
f
2 J
1.60000 M
0 J
1.45000 M
newpath
398.495 231.170 m
397.891 231.170 397.435 231.469 397.128 232.068  c
396.821 232.667 396.667 233.571 396.667 234.779  c
396.667 235.977 396.821 236.876 397.128 237.475  c
397.435 238.074 397.891 238.373 398.495 238.373  c
399.110 238.373 399.571 238.074 399.878 237.475  c
400.185 236.876 400.339 235.977 400.339 234.779  c
400.339 233.571 400.185 232.667 399.878 232.068  c
399.571 231.469 399.110 231.170 398.495 231.170  c
h
398.495 230.232 m
399.474 230.232 400.224 230.620 400.745 231.396  c
401.266 232.173 401.526 233.300 401.526 234.779  c
401.526 236.248 401.266 237.370 400.745 238.146  c
400.224 238.923 399.474 239.311 398.495 239.311  c
397.516 239.311 396.769 238.923 396.253 238.146  c
395.737 237.370 395.479 236.248 395.479 234.779  c
395.479 233.300 395.737 232.173 396.253 231.396  c
396.769 230.620 397.516 230.232 398.495 230.232  c
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
141.377 232.474 m
231.749 294.350 l
235.942 296.597 l
240.270 297.688 l
244.732 297.622 l
249.330 296.401 l
415.541 232.278 l
S
newpath
423.005 229.399 m
410.010 229.053 l
414.608 232.638 l
413.609 238.383 l
h
f
2 J
1.60000 M
0 J
1.45000 M
newpath
320.287 284.509 m
322.225 284.509 l
322.225 277.837 l
320.115 278.259 l
320.115 277.181 l
322.209 276.759 l
323.396 276.759 l
323.396 284.509 l
325.334 284.509 l
325.334 285.509 l
320.287 285.509 l
320.287 284.509 l
h
330.969 277.790 m
327.984 282.462 l
330.969 282.462 l
330.969 277.790 l
h
330.656 276.759 m
332.156 276.759 l
332.156 282.462 l
333.406 282.462 l
333.406 283.447 l
332.156 283.447 l
332.156 285.509 l
330.969 285.509 l
330.969 283.447 l
327.031 283.447 l
327.031 282.306 l
330.656 276.759 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
218.893 216.334 m
271.405 185.111 l
280.258 181.952 l
289.629 182.699 l
414.853 217.793 l
S
newpath
422.557 219.952 m
412.351 211.899 l
413.890 217.523 l
409.652 221.528 l
h
f
2 J
1.60000 M
0 J
1.45000 M
newpath
346.589 185.315 m
346.058 185.315 345.636 185.498 345.323 185.862  c
345.011 186.227 344.854 186.721 344.854 187.346  c
344.854 187.982 345.011 188.482 345.323 188.846  c
345.636 189.211 346.058 189.393 346.589 189.393  c
347.120 189.393 347.539 189.211 347.847 188.846  c
348.154 188.482 348.308 187.982 348.308 187.346  c
348.308 186.721 348.154 186.227 347.847 185.862  c
347.539 185.498 347.120 185.315 346.589 185.315  c
h
348.933 181.596 m
348.933 182.675 l
348.631 182.539 348.328 182.435 348.026 182.362  c
347.724 182.289 347.427 182.253 347.136 182.253  c
346.354 182.253 345.758 182.516 345.347 183.042  c
344.935 183.568 344.698 184.362 344.636 185.425  c
344.865 185.091 345.154 184.833 345.503 184.651  c
345.852 184.469 346.235 184.378 346.651 184.378  c
347.526 184.378 348.219 184.643 348.729 185.175  c
349.240 185.706 349.495 186.430 349.495 187.346  c
349.495 188.253 349.229 188.977 348.698 189.518  c
348.167 190.060 347.464 190.331 346.589 190.331  c
345.568 190.331 344.792 189.943 344.261 189.167  c
343.729 188.391 343.464 187.268 343.464 185.800  c
343.464 184.414 343.792 183.310 344.448 182.487  c
345.104 181.664 345.985 181.253 347.089 181.253  c
347.381 181.253 347.677 181.281 347.979 181.339  c
348.282 181.396 348.599 181.482 348.933 181.596  c
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
295.877 231.693 m
351.415 264.871 l
355.702 266.785 l
359.977 267.398 l
364.241 266.710 l
368.493 264.721 l
416.691 234.760 l
S
newpath
423.485 230.536 m
410.654 232.625 l
415.842 235.288 l
415.934 241.118 l
h
f
2 J
1.60000 M
0 J
1.45000 M
newpath
384.917 271.321 m
389.058 271.321 l
389.058 272.321 l
383.495 272.321 l
383.495 271.321 l
383.943 270.862 384.555 270.240 385.331 269.454  c
386.107 268.667 386.594 268.159 386.792 267.930  c
387.177 267.513 387.446 267.157 387.597 266.860  c
387.748 266.563 387.823 266.274 387.823 265.993  c
387.823 265.524 387.659 265.144 387.331 264.852  c
387.003 264.560 386.578 264.415 386.058 264.415  c
385.683 264.415 385.289 264.477 384.878 264.602  c
384.466 264.727 384.026 264.925 383.558 265.196  c
383.558 263.993 l
384.037 263.805 384.482 263.662 384.894 263.563  c
385.305 263.464 385.683 263.415 386.026 263.415  c
386.933 263.415 387.657 263.641 388.198 264.094  c
388.740 264.547 389.011 265.154 389.011 265.915  c
389.011 266.269 388.943 266.607 388.808 266.930  c
388.672 267.253 388.427 267.633 388.073 268.071  c
387.969 268.185 387.657 268.513 387.136 269.055  c
386.615 269.597 385.875 270.352 384.917 271.321  c
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
452.000 224.000 m
491.000 224.000 l
S
newpath
499.000 224.000 m
487.000 219.000 l
490.000 224.000 l
487.000 229.000 l
h
f
2 J
1.60000 M
0 J
1.45000 M
newpath
475.495 231.170 m
474.891 231.170 474.435 231.469 474.128 232.068  c
473.821 232.667 473.667 233.571 473.667 234.779  c
473.667 235.977 473.821 236.876 474.128 237.475  c
474.435 238.074 474.891 238.373 475.495 238.373  c
476.110 238.373 476.571 238.074 476.878 237.475  c
477.185 236.876 477.339 235.977 477.339 234.779  c
477.339 233.571 477.185 232.667 476.878 232.068  c
476.571 231.469 476.110 231.170 475.495 231.170  c
h
475.495 230.232 m
476.474 230.232 477.224 230.620 477.745 231.396  c
478.266 232.173 478.526 233.300 478.526 234.779  c
478.526 236.248 478.266 237.370 477.745 238.146  c
477.224 238.923 476.474 239.311 475.495 239.311  c
474.516 239.311 473.769 238.923 473.253 238.146  c
472.737 237.370 472.479 236.248 472.479 234.779  c
472.479 233.300 472.737 232.173 473.253 231.396  c
473.769 230.620 474.516 230.232 475.495 230.232  c
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
140.589 233.523 m
250.274 323.651 l
254.231 326.190 l
258.378 327.456 l
262.714 327.451 l
267.239 326.174 l
492.750 232.799 l
S
newpath
500.141 229.738 m
487.141 229.710 l
491.826 233.182 l
490.967 238.949 l
h
f
2 J
1.60000 M
0 J
1.45000 M
newpath
367.787 300.123 m
369.725 300.123 l
369.725 293.451 l
367.615 293.873 l
367.615 292.795 l
369.709 292.373 l
370.896 292.373 l
370.896 300.123 l
372.834 300.123 l
372.834 301.123 l
367.787 301.123 l
367.787 300.123 l
h
375.234 292.373 m
379.875 292.373 l
379.875 293.373 l
376.312 293.373 l
376.312 295.513 l
376.490 295.451 376.664 295.407 376.836 295.380  c
377.008 295.354 377.177 295.341 377.344 295.341  c
378.323 295.341 379.099 295.610 379.672 296.146  c
380.245 296.683 380.531 297.404 380.531 298.310  c
380.531 299.258 380.237 299.992 379.648 300.513  c
379.060 301.034 378.234 301.295 377.172 301.295  c
376.797 301.295 376.419 301.263 376.039 301.201  c
375.659 301.138 375.266 301.045 374.859 300.920  c
374.859 299.732 l
375.214 299.920 375.578 300.060 375.953 300.154  c
376.328 300.248 376.724 300.295 377.141 300.295  c
377.818 300.295 378.354 300.117 378.750 299.763  c
379.146 299.409 379.344 298.925 379.344 298.310  c
379.344 297.706 379.146 297.227 378.750 296.873  c
378.354 296.519 377.818 296.341 377.141 296.341  c
376.828 296.341 376.513 296.375 376.195 296.443  c
375.878 296.511 375.557 296.617 375.234 296.763  c
375.234 292.373 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
218.705 216.026 m
291.530 170.316 l
300.293 166.993 l
309.640 167.658 l
491.827 217.887 l
S
newpath
499.539 220.013 m
489.300 212.004 l
490.863 217.621 l
486.642 221.644 l
h
f
2 J
1.60000 M
0 J
1.45000 M
newpath
392.104 173.990 m
397.729 173.990 l
397.729 174.490 l
394.558 182.740 l
393.323 182.740 l
396.308 174.990 l
392.104 174.990 l
392.104 173.990 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
371.309 233.855 m
422.461 278.430 l
426.265 280.937 l
430.138 281.889 l
434.080 281.284 l
438.092 279.124 l
495.389 237.515 l
S
newpath
501.863 232.814 m
489.215 235.819 l
494.580 238.102 l
495.091 243.911 l
h
f
2 J
1.60000 M
0 J
1.45000 M
newpath
457.604 281.623 m
459.542 281.623 l
459.542 274.951 l
457.433 275.373 l
457.433 274.295 l
459.526 273.873 l
460.714 273.873 l
460.714 281.623 l
462.651 281.623 l
462.651 282.623 l
457.604 282.623 l
457.604 281.623 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
295.926 216.389 m
381.383 166.074 l
385.710 164.137 l
390.075 163.401 l
394.476 163.865 l
398.915 165.530 l
493.495 213.582 l
S
newpath
500.627 217.206 m
492.193 207.313 l
492.603 213.129 l
487.664 216.228 l
h
f
2 J
1.60000 M
0 J
1.45000 M
newpath
440.995 171.867 m
441.558 171.992 441.998 172.245 442.315 172.625  c
442.633 173.005 442.792 173.476 442.792 174.039  c
442.792 174.903 442.495 175.573 441.901 176.047  c
441.308 176.521 440.464 176.758 439.370 176.758  c
439.006 176.758 438.628 176.721 438.237 176.648  c
437.847 176.575 437.448 176.466 437.042 176.320  c
437.042 175.180 l
437.365 175.367 437.722 175.510 438.112 175.609  c
438.503 175.708 438.912 175.758 439.339 175.758  c
440.078 175.758 440.644 175.612 441.034 175.320  c
441.425 175.028 441.620 174.601 441.620 174.039  c
441.620 173.528 441.438 173.127 441.073 172.836  c
440.709 172.544 440.209 172.398 439.573 172.398  c
438.542 172.398 l
438.542 171.430 l
439.620 171.430 l
440.193 171.430 440.636 171.312 440.948 171.078  c
441.261 170.844 441.417 170.508 441.417 170.070  c
441.417 169.622 441.258 169.278 440.940 169.039  c
440.623 168.799 440.167 168.680 439.573 168.680  c
439.240 168.680 438.888 168.713 438.519 168.781  c
438.149 168.849 437.740 168.956 437.292 169.101  c
437.292 168.055 l
437.750 167.930 438.175 167.836 438.565 167.773  c
438.956 167.711 439.323 167.680 439.667 167.680  c
440.573 167.680 441.287 167.883 441.808 168.289  c
442.328 168.695 442.589 169.247 442.589 169.945  c
442.589 170.435 442.451 170.846 442.175 171.180  c
441.899 171.513 441.506 171.742 440.995 171.867  c
h
f
2 J
10.0000 M
Q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
end end restore showpage

%%Trailer
%%EOF
